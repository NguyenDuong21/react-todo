{"version":3,"sources":["components/Forminput.js","components/Todo.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Forminput","props","useState","text","setText","style","display","justifyContent","marginRight","className","type","onChange","e","target","value","fontSize","color","backgroundColor","onClick","datasend","data","Todo","padding","marginTop","fontWeight","content","id","float","Form","Todos","setTodos","useEffect","fetch","then","res","json","removeTodo","method","newtodo","filter","el","headers","body","JSON","stringify","Math","random","do","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAqBeA,MApBf,SAAmBC,GAAQ,IAAD,EACEC,mBAAS,IADX,mBACfC,EADe,KACTC,EADS,KAYtB,OACI,sBAAKC,MAAO,CAACC,QAAQ,OAAQC,eAAe,UAA5C,UACI,uBAAOF,MAAO,CAACG,YAAY,QAASC,UAAU,eAAeC,KAAK,OAAOC,SAZ5D,SAACC,GAClBR,EAAQQ,EAAEC,OAAOC,QAWoFA,MAAOX,IACxG,wBAAQM,UAAU,MAAMJ,MAAO,CAACU,SAAS,OAAQC,MAAM,QAASC,gBAAgB,WAAYC,QAVnF,WACb,IAAIC,EAAW,CACXC,KAAKjB,GAETF,EAAMiB,QAAQC,GACdf,EAAQ,KAKJ,SAA+G,mBAAGK,UAAU,sBCFzHY,MAbf,SAAcpB,GAKV,OACI,sBAAKQ,UAAU,YAAYJ,MAAO,CAACY,gBAAgB,UAAWK,QAAQ,MAAOC,UAAU,OAAQC,WAAW,OAA1G,UACKvB,EAAMwB,QACP,wBAAQP,QAPI,WAChB,IAAIQ,EAAKzB,EAAMyB,GACfzB,EAAMiB,QAAQQ,IAKoBjB,UAAU,MAAMJ,MAAO,CAACU,SAAS,OAAQC,MAAM,QAASC,gBAAgB,MAAOU,MAAM,SAAnH,SAA6H,mBAAGlB,UAAU,2BCgCvImB,MArCf,WACI,IADY,EAWc1B,mBAAS,IAXvB,mBAWL2B,EAXK,KAWEC,EAXF,KAYZC,qBAAU,WACNC,MAAM,qDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAb,GAAI,OAAIU,EAASV,EAAKA,WAC9B,IACF,IAAMgB,EAAa,SAACV,GAChBM,MAAM,qDAAD,OAAsDN,GAAM,CAC7DW,OAAO,WACPJ,MAAK,WACL,IAAIK,EAAUT,EAAMU,QAAO,SAAAC,GAAE,OAAIA,EAAGd,KAAOA,KAC3CI,EAASQ,OAGjB,OACI,sBAAK7B,UAAY,YAAjB,UACI,mCAAK,+CAAL,OACA,cAAC,EAAD,CAAWS,QA3BH,SAACE,GACbY,MAAM,oDAAoD,CACtDK,OAAO,OACPI,QAAQ,CACJ,eAAe,oBAEnBC,KAAMC,KAAKC,UAAUxB,KACtBa,MAAK,kBAAMH,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAACH,GAAiB,GAAdmB,KAAKC,SAAaC,GAAI3B,EAAKA,eAqB3DS,EAAMmB,KAAI,SAAAR,GAAE,OACT,cAAC,EAAD,CAAMf,QAASe,EAAGO,GAAIrB,GAAIc,EAAGd,GAAIR,QAASkB,WCxB3Ca,MARf,WACE,OACE,qBAAKxC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c24158bc.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nfunction Forminput(props) {\r\n    const [text, setText] = useState('');\r\n    const handelChange = (e) => {\r\n        setText(e.target.value)\r\n    }\r\n    const sendTodo = () => {\r\n        let datasend = {\r\n            data:text\r\n        };\r\n        props.onClick(datasend);\r\n        setText('');\r\n    }\r\n    return (\r\n        <div style={{display:'flex', justifyContent:'center'}}>\r\n            <input style={{marginRight:'10px'}} className=\"form-control\" type=\"text\" onChange={handelChange} value={text}/>\r\n            <button className=\"btn\" style={{fontSize:\"10px\", color:'white', backgroundColor:'#4A00E0'}} onClick={sendTodo}><i className=\"fas fa-plus\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forminput\r\n","import React from 'react'\r\nfunction Todo(props) {\r\n    const handelClick = () => {\r\n        let id = props.id;\r\n        props.onClick(id);\r\n    }\r\n    return (\r\n        <div className=\"clear-fix\" style={{backgroundColor:'#c1c1c1', padding:\"8px\", marginTop:'17px', fontWeight:'550'}}>\r\n            {props.content}\r\n            <button onClick={handelClick} className=\"btn\" style={{fontSize:\"10px\", color:'white', backgroundColor:'red', float:'right'}}><i className=\"fas fa-trash-alt\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React,{useState, useEffect} from 'react'\r\nimport './Form.css';\r\nimport Forminput from './Forminput';\r\nimport Todo from './Todo';\r\nfunction Form() {\r\n    const addTodo = (data) => {\r\n        fetch('https://rest-api-server-app.herokuapp.com/student',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data) \r\n        }).then(() => setTodos([...Todos,{id:Math.random()*10, do: data.data}]));\r\n    }\r\n  \r\n    const [Todos, setTodos] = useState([]);\r\n    useEffect(() => {\r\n        fetch('https://rest-api-server-app.herokuapp.com/student')\r\n        .then(res => res.json())\r\n        .then(data => setTodos(data.data));\r\n    },[]);\r\n    const removeTodo = (id) => {\r\n        fetch(`https://rest-api-server-app.herokuapp.com/student/${id}`, {\r\n            method:'DELETE'\r\n        }) .then(() => {\r\n            let newtodo = Todos.filter(el => el.id !== id);\r\n            setTodos(newtodo);\r\n        });\r\n    };\r\n    return (\r\n        <div className = \"main_form\">\r\n            <h1> <center>Todo List</center> </h1>\r\n            <Forminput onClick = {addTodo}/>\r\n            {Todos.map(el => (\r\n                <Todo content={el.do} id={el.id} onClick={removeTodo}/>\r\n            ))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import './App.css';\nimport Form from './components/Form';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}